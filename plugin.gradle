buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.netflix.nebula:nebula-plugin-plugin:1.9.+' }
    dependencies { classpath 'com.netflix.nebula:gradle-contacts-plugin:1.9.+' }
}

description 'Gradle plugin to setup nebula-plugin'
apply plugin: 'nebula-plugin'

apply plugin: 'contacts'
contacts {
    'justin@halfempty.org' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
}

dependencies {
    compile 'com.netflix.nebula:nebula-project-plugin:1.9.+'
    compile('com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3') {
        exclude group: 'org.codehaus.groovy.modules.http-builder', module: 'http-builder'
    }
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'net.sourceforge.nekohtml', module: 'nekohtml'
    }
    compile('org.jfrog.buildinfo:build-info-extractor-gradle:2.2.4') // Way too many dependencies. :-(
    compile 'com.github.townsfolk:gradle-release:1.2'

    // will get nebula-test from ourselves, the plugin, but we should control the version here
    compile 'com.netflix.nebula:nebula-test:1.9.+'
}

// Temporary until we can get locking into its own plugin
configurations {
    latest
}

dependencies {
    latest 'com.netflix.nebula:nebula-core:1.9.+'
    latest 'com.netflix.nebula:nebula-test:1.9.+'
}

task latest << {
    def latestDeps = configurations.latest.resolvedConfiguration.firstLevelModuleDependencies
    def depVers = latestDeps.collect { it.module.id }
    def props = file('build/latest/nebula.properties')
    props.parentFile.mkdirs()
    props.text = depVers.collect {"${it.group}.${it.name}.rev=${it.version}"}.join('\n') + '\n'
}

jar {
    from('build/latest/') {
        into('/')
    }
    dependsOn(tasks.latest)
}
