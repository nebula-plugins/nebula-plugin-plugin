/*
 * Copyright 2015-2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'nebula.plugin-plugin' version '15.4.1'
}

description 'Project plugin for Nebula plugins'

contacts {
    'nebula-plugins-oss@netflix.com' {
        moniker 'Nebula Plugins Maintainers'
        github 'nebula-plugins'
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'com.netflix.nebula:nebula-oss-publishing-plugin:latest.release'
    implementation 'com.netflix.nebula:gradle-contacts-plugin:latest.release'
    implementation 'com.netflix.nebula:gradle-dependency-lock-plugin:latest.release'
    implementation 'com.netflix.nebula:gradle-extra-configurations-plugin:latest.release'
    implementation 'com.netflix.nebula:gradle-info-plugin:latest.release'
    implementation 'com.netflix.nebula:gradle-java-cross-compile-plugin:latest.release'
    implementation 'com.netflix.nebula:nebula-publishing-plugin:latest.release'
    implementation 'com.netflix.nebula:nebula-project-plugin:latest.release'
    implementation 'com.netflix.nebula:nebula-release-plugin:latest.release'
    implementation 'com.netflix.nebula:nebula-gradle-interop:latest.release'

    implementation enforcedPlatform("com.fasterxml.jackson:jackson-bom:2.9.10.+")

    implementation 'com.gradle.publish:plugin-publish-plugin:0.11.0'
    implementation 'gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:latest.release'

    testImplementation 'com.netflix.nebula:nebula-test:latest.release'
    testImplementation("org.ajoberstar.grgit:grgit-core:3.1.1") {
        exclude group: "org.codehaus.groovy", module: "groovy"
    }
}

pluginBundle {
    plugins {
        pluginPlugin {
            id = 'nebula.plugin-plugin'
            displayName = 'Nebula Plugin Plugin'
            description = 'Sets up publishing and release process for all of the other nebula plugins'
            tags = ['nebula', 'plugin']
        }
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    // The value 'enforced-platform' is provided in the validation
    // error message you got
    suppressedValidationErrors.add('enforced-platform')
}
